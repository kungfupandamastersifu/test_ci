name: CI
on: [push]
  # push: #run when `git push` or `merge a pull request` into the master branch
  #   branches:
  #   - master
  # pull_request: #run `merge a pull request` into the master branch
  #   branches:
  #   - master
jobs:
  build_and_test:
    runs-on: ubuntu-18.04
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: compile
      run: gcc -Wall main.c -o main
    - name: test
      run: ./main
  
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build_and_test
    runs-on: ubuntu-18.04
    steps:
      
      - name: ls
        run: ls .
      - name: tar.gz
        run: tar -cvf main.tar.gz ./main
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./main.tar.gz
          asset_name: main.tar.gz
          asset_content_type: application/x-gtar
